// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"errors"
	"fmt"
	"github.com/dubinc/dub-go/internal/utils"
)

type DomainsType string

const (
	DomainsTypeStr        DomainsType = "str"
	DomainsTypeArrayOfStr DomainsType = "arrayOfStr"
)

// Domains - The domains to search. We only support .link domains for now.
type Domains struct {
	Str        *string  `queryParam:"inline,name=domains"`
	ArrayOfStr []string `queryParam:"inline,name=domains"`

	Type DomainsType
}

func CreateDomainsStr(str string) Domains {
	typ := DomainsTypeStr

	return Domains{
		Str:  &str,
		Type: typ,
	}
}

func CreateDomainsArrayOfStr(arrayOfStr []string) Domains {
	typ := DomainsTypeArrayOfStr

	return Domains{
		ArrayOfStr: arrayOfStr,
		Type:       typ,
	}
}

func (u *Domains) UnmarshalJSON(data []byte) error {

	var str string = ""
	if err := utils.UnmarshalJSON(data, &str, "", true, nil); err == nil {
		u.Str = &str
		u.Type = DomainsTypeStr
		return nil
	}

	var arrayOfStr []string = []string{}
	if err := utils.UnmarshalJSON(data, &arrayOfStr, "", true, nil); err == nil {
		u.ArrayOfStr = arrayOfStr
		u.Type = DomainsTypeArrayOfStr
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for Domains", string(data))
}

func (u Domains) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	if u.ArrayOfStr != nil {
		return utils.MarshalJSON(u.ArrayOfStr, "", true)
	}

	return nil, errors.New("could not marshal union type Domains: all fields are null")
}

type CheckDomainStatusRequest struct {
	// The domains to search. We only support .link domains for now.
	Domains Domains `queryParam:"style=form,explode=false,name=domains"`
}

func (c *CheckDomainStatusRequest) GetDomains() Domains {
	if c == nil {
		return Domains{}
	}
	return c.Domains
}

type CheckDomainStatusResponseBody struct {
	// The domain name.
	Domain string `json:"domain"`
	// Whether the domain is available.
	Available bool `json:"available"`
	// The price description.
	Price *string `json:"price"`
	// Whether the domain is a premium domain.
	Premium *bool `json:"premium"`
}

func (c *CheckDomainStatusResponseBody) GetDomain() string {
	if c == nil {
		return ""
	}
	return c.Domain
}

func (c *CheckDomainStatusResponseBody) GetAvailable() bool {
	if c == nil {
		return false
	}
	return c.Available
}

func (c *CheckDomainStatusResponseBody) GetPrice() *string {
	if c == nil {
		return nil
	}
	return c.Price
}

func (c *CheckDomainStatusResponseBody) GetPremium() *bool {
	if c == nil {
		return nil
	}
	return c.Premium
}
