// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/dubinc/dub-go/internal/utils"
	"github.com/dubinc/dub-go/models/components"
)

type ListDomainsRequest struct {
	// Whether to include archived domains in the response. Defaults to `false` if not provided.
	Archived *bool `default:"false" queryParam:"style=form,explode=true,name=archived"`
	// The search term to filter the domains by.
	Search *string `queryParam:"style=form,explode=true,name=search"`
	// The page number for pagination.
	Page *float64 `default:"1" queryParam:"style=form,explode=true,name=page"`
	// The number of items per page.
	PageSize *float64 `default:"50" queryParam:"style=form,explode=true,name=pageSize"`
}

func (l ListDomainsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListDomainsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListDomainsRequest) GetArchived() *bool {
	if o == nil {
		return nil
	}
	return o.Archived
}

func (o *ListDomainsRequest) GetSearch() *string {
	if o == nil {
		return nil
	}
	return o.Search
}

func (o *ListDomainsRequest) GetPage() *float64 {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *ListDomainsRequest) GetPageSize() *float64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

type ListDomainsResponse struct {
	Result []components.DomainSchema

	Next func() (*ListDomainsResponse, error)
}

func (o *ListDomainsResponse) GetResult() []components.DomainSchema {
	if o == nil {
		return []components.DomainSchema{}
	}
	return o.Result
}
