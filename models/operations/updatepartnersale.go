// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
)

type UpdatePartnerSaleRequestBody struct {
	ProgramID string `json:"programId"`
	InvoiceID string `json:"invoiceId"`
	// The new amount for the sale.
	Amount float64 `json:"amount"`
}

func (o *UpdatePartnerSaleRequestBody) GetProgramID() string {
	if o == nil {
		return ""
	}
	return o.ProgramID
}

func (o *UpdatePartnerSaleRequestBody) GetInvoiceID() string {
	if o == nil {
		return ""
	}
	return o.InvoiceID
}

func (o *UpdatePartnerSaleRequestBody) GetAmount() float64 {
	if o == nil {
		return 0.0
	}
	return o.Amount
}

type UpdatePartnerSaleStatus string

const (
	UpdatePartnerSaleStatusPending   UpdatePartnerSaleStatus = "pending"
	UpdatePartnerSaleStatusProcessed UpdatePartnerSaleStatus = "processed"
	UpdatePartnerSaleStatusPaid      UpdatePartnerSaleStatus = "paid"
	UpdatePartnerSaleStatusRefunded  UpdatePartnerSaleStatus = "refunded"
	UpdatePartnerSaleStatusDuplicate UpdatePartnerSaleStatus = "duplicate"
	UpdatePartnerSaleStatusFraud     UpdatePartnerSaleStatus = "fraud"
)

func (e UpdatePartnerSaleStatus) ToPointer() *UpdatePartnerSaleStatus {
	return &e
}
func (e *UpdatePartnerSaleStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pending":
		fallthrough
	case "processed":
		fallthrough
	case "paid":
		fallthrough
	case "refunded":
		fallthrough
	case "duplicate":
		fallthrough
	case "fraud":
		*e = UpdatePartnerSaleStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdatePartnerSaleStatus: %v", v)
	}
}

// UpdatePartnerSaleResponseBody - The updated sale.
type UpdatePartnerSaleResponseBody struct {
	ID        string                  `json:"id"`
	Amount    float64                 `json:"amount"`
	Earnings  float64                 `json:"earnings"`
	Currency  string                  `json:"currency"`
	Status    UpdatePartnerSaleStatus `json:"status"`
	CreatedAt string                  `json:"createdAt"`
	UpdatedAt string                  `json:"updatedAt"`
}

func (o *UpdatePartnerSaleResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *UpdatePartnerSaleResponseBody) GetAmount() float64 {
	if o == nil {
		return 0.0
	}
	return o.Amount
}

func (o *UpdatePartnerSaleResponseBody) GetEarnings() float64 {
	if o == nil {
		return 0.0
	}
	return o.Earnings
}

func (o *UpdatePartnerSaleResponseBody) GetCurrency() string {
	if o == nil {
		return ""
	}
	return o.Currency
}

func (o *UpdatePartnerSaleResponseBody) GetStatus() UpdatePartnerSaleStatus {
	if o == nil {
		return UpdatePartnerSaleStatus("")
	}
	return o.Status
}

func (o *UpdatePartnerSaleResponseBody) GetCreatedAt() string {
	if o == nil {
		return ""
	}
	return o.CreatedAt
}

func (o *UpdatePartnerSaleResponseBody) GetUpdatedAt() string {
	if o == nil {
		return ""
	}
	return o.UpdatedAt
}
