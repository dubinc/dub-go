// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/dubinc/dub-go/internal/utils"
)

type UpdateDomainRequestBody struct {
	// Name of the domain.
	Slug *string `json:"slug,omitempty"`
	// Redirect users to a specific URL when any link under this domain has expired.
	ExpiredURL *string `json:"expiredUrl,omitempty"`
	// Redirect users to a specific URL when a link under this domain doesn't exist.
	NotFoundURL *string `json:"notFoundUrl,omitempty"`
	// Whether to archive this domain. `false` will unarchive a previously archived domain.
	Archived *bool `default:"false" json:"archived"`
	// Provide context to your teammates in the link creation modal by showing them an example of a link to be shortened.
	Placeholder *string `json:"placeholder,omitempty"`
	// The logo of the domain.
	Logo *string `json:"logo,omitempty"`
	// assetLinks.json configuration file (for deep link support on Android).
	AssetLinks *string `json:"assetLinks,omitempty"`
	// apple-app-site-association configuration file (for deep link support on iOS).
	AppleAppSiteAssociation *string `json:"appleAppSiteAssociation,omitempty"`
}

func (u UpdateDomainRequestBody) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UpdateDomainRequestBody) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (u *UpdateDomainRequestBody) GetSlug() *string {
	if u == nil {
		return nil
	}
	return u.Slug
}

func (u *UpdateDomainRequestBody) GetExpiredURL() *string {
	if u == nil {
		return nil
	}
	return u.ExpiredURL
}

func (u *UpdateDomainRequestBody) GetNotFoundURL() *string {
	if u == nil {
		return nil
	}
	return u.NotFoundURL
}

func (u *UpdateDomainRequestBody) GetArchived() *bool {
	if u == nil {
		return nil
	}
	return u.Archived
}

func (u *UpdateDomainRequestBody) GetPlaceholder() *string {
	if u == nil {
		return nil
	}
	return u.Placeholder
}

func (u *UpdateDomainRequestBody) GetLogo() *string {
	if u == nil {
		return nil
	}
	return u.Logo
}

func (u *UpdateDomainRequestBody) GetAssetLinks() *string {
	if u == nil {
		return nil
	}
	return u.AssetLinks
}

func (u *UpdateDomainRequestBody) GetAppleAppSiteAssociation() *string {
	if u == nil {
		return nil
	}
	return u.AppleAppSiteAssociation
}

type UpdateDomainRequest struct {
	// The domain name.
	Slug        string                   `pathParam:"style=simple,explode=false,name=slug"`
	RequestBody *UpdateDomainRequestBody `request:"mediaType=application/json"`
}

func (u *UpdateDomainRequest) GetSlug() string {
	if u == nil {
		return ""
	}
	return u.Slug
}

func (u *UpdateDomainRequest) GetRequestBody() *UpdateDomainRequestBody {
	if u == nil {
		return nil
	}
	return u.RequestBody
}
