// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"github.com/dubinc/dub-go/internal/utils"
)

type Region string

const (
	RegionWildcard Region = "*"
)

func (e Region) ToPointer() *Region {
	return &e
}
func (e *Region) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "*":
		*e = Region(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Region: %v", v)
	}
}

type City string

const (
	CityWildcard City = "*"
)

func (e City) ToPointer() *City {
	return &e
}
func (e *City) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "*":
		*e = City(v)
		return nil
	default:
		return fmt.Errorf("invalid value for City: %v", v)
	}
}

type AnalyticsCountries struct {
	// The 2-letter ISO 3166-1 country code of the country. Learn more: https://d.to/geo
	Country string  `json:"country"`
	Region  *Region `default:"*" json:"region"`
	City    *City   `default:"*" json:"city"`
	// The number of clicks from this country
	Clicks *float64 `default:"0" json:"clicks"`
	// The number of leads from this country
	Leads *float64 `default:"0" json:"leads"`
	// The number of sales from this country
	Sales *float64 `default:"0" json:"sales"`
	// The total amount of sales from this country, in cents
	SaleAmount *float64 `default:"0" json:"saleAmount"`
}

func (a AnalyticsCountries) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AnalyticsCountries) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, []string{"country"}); err != nil {
		return err
	}
	return nil
}

func (o *AnalyticsCountries) GetCountry() string {
	if o == nil {
		return ""
	}
	return o.Country
}

func (o *AnalyticsCountries) GetRegion() *Region {
	if o == nil {
		return nil
	}
	return o.Region
}

func (o *AnalyticsCountries) GetCity() *City {
	if o == nil {
		return nil
	}
	return o.City
}

func (o *AnalyticsCountries) GetClicks() *float64 {
	if o == nil {
		return nil
	}
	return o.Clicks
}

func (o *AnalyticsCountries) GetLeads() *float64 {
	if o == nil {
		return nil
	}
	return o.Leads
}

func (o *AnalyticsCountries) GetSales() *float64 {
	if o == nil {
		return nil
	}
	return o.Sales
}

func (o *AnalyticsCountries) GetSaleAmount() *float64 {
	if o == nil {
		return nil
	}
	return o.SaleAmount
}
