// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"github.com/dubinc/dub-go/internal/utils"
)

type AnalyticsRegionsCity string

const (
	AnalyticsRegionsCityWildcard AnalyticsRegionsCity = "*"
)

func (e AnalyticsRegionsCity) ToPointer() *AnalyticsRegionsCity {
	return &e
}
func (e *AnalyticsRegionsCity) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "*":
		*e = AnalyticsRegionsCity(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AnalyticsRegionsCity: %v", v)
	}
}

type AnalyticsRegions struct {
	// The 2-letter ISO 3166-1 country code of the country. Learn more: https://d.to/geo
	Country string `json:"country"`
	// The 2-letter ISO 3166-2 region code of the region.
	Region string                `json:"region"`
	City   *AnalyticsRegionsCity `default:"*" json:"city"`
	// The number of clicks from this region
	Clicks *float64 `default:"0" json:"clicks"`
	// The number of leads from this region
	Leads *float64 `default:"0" json:"leads"`
	// The number of sales from this region
	Sales *float64 `default:"0" json:"sales"`
	// The total amount of sales from this region, in cents
	SaleAmount *float64 `default:"0" json:"saleAmount"`
}

func (a AnalyticsRegions) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AnalyticsRegions) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, []string{"country", "region"}); err != nil {
		return err
	}
	return nil
}

func (o *AnalyticsRegions) GetCountry() string {
	if o == nil {
		return ""
	}
	return o.Country
}

func (o *AnalyticsRegions) GetRegion() string {
	if o == nil {
		return ""
	}
	return o.Region
}

func (o *AnalyticsRegions) GetCity() *AnalyticsRegionsCity {
	if o == nil {
		return nil
	}
	return o.City
}

func (o *AnalyticsRegions) GetClicks() *float64 {
	if o == nil {
		return nil
	}
	return o.Clicks
}

func (o *AnalyticsRegions) GetLeads() *float64 {
	if o == nil {
		return nil
	}
	return o.Leads
}

func (o *AnalyticsRegions) GetSales() *float64 {
	if o == nil {
		return nil
	}
	return o.Sales
}

func (o *AnalyticsRegions) GetSaleAmount() *float64 {
	if o == nil {
		return nil
	}
	return o.SaleAmount
}
