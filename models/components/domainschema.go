// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"github.com/dubinc/dub-go/internal/utils"
)

// Type - The type of redirect to use for this domain.
type Type string

const (
	TypeRedirect Type = "redirect"
	TypeRewrite  Type = "rewrite"
)

func (e Type) ToPointer() *Type {
	return &e
}

func (e *Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "redirect":
		fallthrough
	case "rewrite":
		*e = Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Type: %v", v)
	}
}

type DomainSchema struct {
	// The unique identifier of the domain.
	ID string `json:"id"`
	// The domain name.
	Slug string `json:"slug"`
	// Whether the domain is verified.
	Verified *bool `default:"false" json:"verified"`
	// Whether the domain is the primary domain for the workspace.
	Primary *bool `default:"false" json:"primary"`
	// Whether the domain is archived.
	Archived *bool `default:"false" json:"archived"`
	// Prevent search engines from indexing the domain.
	Noindex *bool `default:"false" json:"noindex"`
	// Provide context to your teammates in the link creation modal by showing them an example of a link to be shortened.
	Placeholder *string `default:"https://dub.co/help/article/what-is-dub" json:"placeholder"`
	// The URL to redirect to when a link under this domain has expired.
	ExpiredURL *string `json:"expiredUrl"`
	// The page your users will get redirected to when they visit your domain.
	Target *string `json:"target"`
	// The type of redirect to use for this domain.
	Type Type `json:"type"`
	// The number of clicks on the domain.
	Clicks *float64 `default:"0" json:"clicks"`
}

func (d DomainSchema) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *DomainSchema) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *DomainSchema) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *DomainSchema) GetSlug() string {
	if o == nil {
		return ""
	}
	return o.Slug
}

func (o *DomainSchema) GetVerified() *bool {
	if o == nil {
		return nil
	}
	return o.Verified
}

func (o *DomainSchema) GetPrimary() *bool {
	if o == nil {
		return nil
	}
	return o.Primary
}

func (o *DomainSchema) GetArchived() *bool {
	if o == nil {
		return nil
	}
	return o.Archived
}

func (o *DomainSchema) GetNoindex() *bool {
	if o == nil {
		return nil
	}
	return o.Noindex
}

func (o *DomainSchema) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *DomainSchema) GetExpiredURL() *string {
	if o == nil {
		return nil
	}
	return o.ExpiredURL
}

func (o *DomainSchema) GetTarget() *string {
	if o == nil {
		return nil
	}
	return o.Target
}

func (o *DomainSchema) GetType() Type {
	if o == nil {
		return Type("")
	}
	return o.Type
}

func (o *DomainSchema) GetClicks() *float64 {
	if o == nil {
		return nil
	}
	return o.Clicks
}
