// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/dubinc/dub-go/internal/utils"
)

type AnalyticsCities struct {
	// The 2-letter ISO 3166-1 country code of the country where this city is located. Learn more: https://d.to/geo
	Country string `json:"country"`
	// The 2-letter ISO 3166-2 region code representing the region associated with the location of the user.
	Region string `json:"region"`
	// The name of the city
	City string `json:"city"`
	// The number of clicks from this city
	Clicks *float64 `default:"0" json:"clicks"`
	// The number of leads from this city
	Leads *float64 `default:"0" json:"leads"`
	// The number of sales from this city
	Sales *float64 `default:"0" json:"sales"`
	// The total amount of sales from this city, in cents
	SaleAmount *float64 `default:"0" json:"saleAmount"`
}

func (a AnalyticsCities) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AnalyticsCities) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, []string{"country", "region", "city"}); err != nil {
		return err
	}
	return nil
}

func (o *AnalyticsCities) GetCountry() string {
	if o == nil {
		return ""
	}
	return o.Country
}

func (o *AnalyticsCities) GetRegion() string {
	if o == nil {
		return ""
	}
	return o.Region
}

func (o *AnalyticsCities) GetCity() string {
	if o == nil {
		return ""
	}
	return o.City
}

func (o *AnalyticsCities) GetClicks() *float64 {
	if o == nil {
		return nil
	}
	return o.Clicks
}

func (o *AnalyticsCities) GetLeads() *float64 {
	if o == nil {
		return nil
	}
	return o.Leads
}

func (o *AnalyticsCities) GetSales() *float64 {
	if o == nil {
		return nil
	}
	return o.Sales
}

func (o *AnalyticsCities) GetSaleAmount() *float64 {
	if o == nil {
		return nil
	}
	return o.SaleAmount
}
