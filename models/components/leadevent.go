// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type LeadEventEvent string

const (
	LeadEventEventLead LeadEventEvent = "lead"
)

func (e LeadEventEvent) ToPointer() *LeadEventEvent {
	return &e
}
func (e *LeadEventEvent) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "lead":
		*e = LeadEventEvent(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LeadEventEvent: %v", v)
	}
}

type LeadEvent struct {
	Event          LeadEventEvent `json:"event"`
	Timestamp      string         `json:"timestamp"`
	EventID        string         `json:"event_id"`
	EventName      string         `json:"event_name"`
	CustomerName   string         `json:"customer_name"`
	CustomerEmail  string         `json:"customer_email"`
	CustomerAvatar string         `json:"customer_avatar"`
	ClickID        string         `json:"click_id"`
	LinkID         string         `json:"link_id"`
	Domain         string         `json:"domain"`
	Key            string         `json:"key"`
	URL            string         `json:"url"`
	Continent      *string        `json:"continent"`
	Country        *string        `json:"country"`
	City           *string        `json:"city"`
	Device         *string        `json:"device"`
	Browser        *string        `json:"browser"`
	Os             *string        `json:"os"`
	Referer        *string        `json:"referer"`
	Qr             *float64       `json:"qr"`
	IP             *string        `json:"ip"`
}

func (o *LeadEvent) GetEvent() LeadEventEvent {
	if o == nil {
		return LeadEventEvent("")
	}
	return o.Event
}

func (o *LeadEvent) GetTimestamp() string {
	if o == nil {
		return ""
	}
	return o.Timestamp
}

func (o *LeadEvent) GetEventID() string {
	if o == nil {
		return ""
	}
	return o.EventID
}

func (o *LeadEvent) GetEventName() string {
	if o == nil {
		return ""
	}
	return o.EventName
}

func (o *LeadEvent) GetCustomerName() string {
	if o == nil {
		return ""
	}
	return o.CustomerName
}

func (o *LeadEvent) GetCustomerEmail() string {
	if o == nil {
		return ""
	}
	return o.CustomerEmail
}

func (o *LeadEvent) GetCustomerAvatar() string {
	if o == nil {
		return ""
	}
	return o.CustomerAvatar
}

func (o *LeadEvent) GetClickID() string {
	if o == nil {
		return ""
	}
	return o.ClickID
}

func (o *LeadEvent) GetLinkID() string {
	if o == nil {
		return ""
	}
	return o.LinkID
}

func (o *LeadEvent) GetDomain() string {
	if o == nil {
		return ""
	}
	return o.Domain
}

func (o *LeadEvent) GetKey() string {
	if o == nil {
		return ""
	}
	return o.Key
}

func (o *LeadEvent) GetURL() string {
	if o == nil {
		return ""
	}
	return o.URL
}

func (o *LeadEvent) GetContinent() *string {
	if o == nil {
		return nil
	}
	return o.Continent
}

func (o *LeadEvent) GetCountry() *string {
	if o == nil {
		return nil
	}
	return o.Country
}

func (o *LeadEvent) GetCity() *string {
	if o == nil {
		return nil
	}
	return o.City
}

func (o *LeadEvent) GetDevice() *string {
	if o == nil {
		return nil
	}
	return o.Device
}

func (o *LeadEvent) GetBrowser() *string {
	if o == nil {
		return nil
	}
	return o.Browser
}

func (o *LeadEvent) GetOs() *string {
	if o == nil {
		return nil
	}
	return o.Os
}

func (o *LeadEvent) GetReferer() *string {
	if o == nil {
		return nil
	}
	return o.Referer
}

func (o *LeadEvent) GetQr() *float64 {
	if o == nil {
		return nil
	}
	return o.Qr
}

func (o *LeadEvent) GetIP() *string {
	if o == nil {
		return nil
	}
	return o.IP
}
